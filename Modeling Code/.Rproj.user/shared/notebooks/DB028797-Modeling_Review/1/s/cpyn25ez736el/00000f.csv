"0","CJS_bootstrap<-function(iterations,ch,cap_X,surv_X){"
"0","  #Part 1: set initial values"
"0","  results<-data.frame()"
"0","  initial_beta=numeric(4)"
"0","  "
"0","  #Part 2: run the for loop for each iteration"
"0","  for(r in 1:iterations){"
"0","    iter_start<-Sys.time()"
"0","    "
"0","    #Part 2.1: index and sample the capture histories"
"0","    index=1:dim(ch_prepped)[1]"
"0","    samp<- sample(index, replace = T)"
"0","  "
"0","    #Part 2.2: create new capture histories and"
"0","    #cap_X and surv_X matrices based on sampled indices"
"0","    ch_iteration = ch_prepped[samp,]"
"0","    cap_X_iteration=cap_X_prepped[samp,]"
"0","    surv_X_iteration=surv_X_prepped[samp,]"
"0","  "
"0","    #Part 2.3: use cpp_optim to find the optimizal beta"
"0","    #parameters for the given iteration data"
"0","    {gc()"
"0","      optim_iter<-cpp_optim(beta=initial_beta,"
"0","              ch=as.matrix(ch_iteration),"
"0","              cap_X=as.matrix(cap_X_iteration),"
"0","              surv_X=as.matrix(surv_X_iteration))"
"0","    }"
"0","    iter_beta<-optim_iter$par"
"0","    iter_lik<-optim_iter$value"
"0","  "
"0","    #Part 2.4: estimate total escapement for iteration"
"0","    est_esc_iter<-total_escapement(ch_iteration,"
"0","                                         iter_beta,"
"0","                                         cap_X_iteration,"
"0","                                         surv_X_iteration)"
"0","  "
"0","    iter_end<-Sys.time()"
"0","    iter_time<-iter_end-iter_start"
"0","    "
"0","    #Part 2.5: store relevant iteration information in results"
"0","    d<-data.frame(""iteration""=r,"
"0","                ""log-likelihood""=iter_lik,"
"0","                ""escapement""=est_esc_iter,"
"0","                ""time""=iter_time)"
"0","    results<-results%>%rbind(d)"
"0","    print(r) #print iteration number for progress tracking"
"0","  }"
"0","  return(results)"
"0","}"
